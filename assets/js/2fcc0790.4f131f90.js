"use strict";(self.webpackChunkreact_map_gl_website=self.webpackChunkreact_map_gl_website||[]).push([[811],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),d=n,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return a?r.createElement(g,i(i({ref:t},p),{},{components:a})):r.createElement(g,i({ref:t},p))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3709:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),i=["components"],l={},s="Adding Custom Data",c={unversionedId:"get-started/adding-custom-data",id:"get-started/adding-custom-data",title:"Adding Custom Data",description:"Native Mapbox Layers",source:"@site/../docs/get-started/adding-custom-data.md",sourceDirName:"get-started",slug:"/get-started/adding-custom-data",permalink:"/react-map-gl/docs/get-started/adding-custom-data",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/get-started/adding-custom-data.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"State Management",permalink:"/react-map-gl/docs/get-started/state-management"},next:{title:"Tips and Tricks",permalink:"/react-map-gl/docs/get-started/tips-and-tricks"}},p={},u=[{value:"Native Mapbox Layers",id:"native-mapbox-layers",level:2},{value:"Custom Overlays",id:"custom-overlays",level:2},{value:"Other vis.gl Libraries",id:"other-visgl-libraries",level:2}],m={toc:u},d="wrapper";function g(e){var t=e.components,a=(0,n.Z)(e,i);return(0,o.kt)(d,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"adding-custom-data"},"Adding Custom Data"),(0,o.kt)("h2",{id:"native-mapbox-layers"},"Native Mapbox Layers"),(0,o.kt)("p",null,"You can inject data and mapbox native layers using the ",(0,o.kt)("a",{parentName:"p",href:"/react-map-gl/docs/api-reference/source"},"Source")," and ",(0,o.kt)("a",{parentName:"p",href:"/react-map-gl/docs/api-reference/layer"},"Layer")," components:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as React from 'react';\nimport Map, {Source, Layer} from 'react-map-gl';\nimport type {CircleLayer} from 'react-map-gl';\nimport type {FeatureCollection} from 'geojson';\n\nconst geojson: FeatureCollection = {\n  type: 'FeatureCollection',\n  features: [\n    {type: 'Feature', geometry: {type: 'Point', coordinates: [-122.4, 37.8]}}\n  ]\n};\n\nconst layerStyle: CircleLayer = {\n  id: 'point',\n  type: 'circle',\n  paint: {\n    'circle-radius': 10,\n    'circle-color': '#007cbf'\n  }\n};\n\nfunction App() {\n  return (\n    <Map\n      initialViewState={{\n        longitude: -122.45,\n        latitude: 37.78,\n        zoom: 14\n      }}>\n      <Source id=\"my-data\" type=\"geojson\" data={geojson}>\n        <Layer {...layerStyle} />\n      </Source>\n    </Map>\n  );\n}\n")),(0,o.kt)("p",null,"For details about data sources and layer configuration, check out the ",(0,o.kt)("a",{parentName:"p",href:"https://www.mapbox.com/mapbox-gl-js/style-spec"},"Mapbox style specification"),"."),(0,o.kt)("p",null,"For dynamically updating data sources and layers, check out the ",(0,o.kt)("a",{parentName:"p",href:"http://visgl.github.io/react-map-gl/examples/geojson"},"GeoJSON")," and ",(0,o.kt)("a",{parentName:"p",href:"http://visgl.github.io/react-map-gl/examples/geojson-animation"},"GeoJSON animation")," examples."),(0,o.kt)("h2",{id:"custom-overlays"},"Custom Overlays"),(0,o.kt)("p",null,"You can implement a custom HTML or SVG overlay on top of the map that redraws whenever the camera changes. By calling ",(0,o.kt)("inlineCode",{parentName:"p"},"map.project()")," you can adjust the DOM or CSS properties so that the customly-drawn features are always aligned with the map. See a full example ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/visgl/react-map-gl/tree/7.1-release/examples/custom-overlay"},"here"),"."),(0,o.kt)("h2",{id:"other-visgl-libraries"},"Other vis.gl Libraries"),(0,o.kt)("p",null,"For more feature rich and performant data visualization overlay use cases, you may consider using other visualization libraries. react-map-gl is part of the ",(0,o.kt)("a",{parentName:"p",href:"https://www.github.com/visgl"},"vis.gl")," ecosystem, a suite of high-performance data visualization tools for the Web."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://deck.gl"},"deck.gl")," - WebGL-powered framework for the visualization of large datasets."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://loaders.gl"},"loaders.gl")," - loaders for file formats focused on visualization of big data, including point clouds, 3D geometries, images, geospatial formats as well as tabular data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nebula.gl"},"nebula.gl")," - 3D-enabled GeoJSON editing based on deck.gl and React.")))}g.isMDXComponent=!0}}]);